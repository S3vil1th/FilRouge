@using BierBuyFR.Web.MethodeEnum
@using BierBuyFR.Web.ViewModel

@model ShopViewModels
@{
    ViewBag.Title = "Index";

}

<!-- Page title -->
<div class="page-title parallax parallax1">
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <div class="page-title-heading">
                    <h1 class="title">Magasin</h1>
                </div><!-- /.page-title-heading -->
            </div><!-- /.col-md-12 -->
        </div><!-- /.row -->
    </div><!-- /.container -->
</div><!-- /.page-title -->

<section class="flat-row main-shop shop-slidebar">
    <div class="container">
        <div class="row">
            <div class="col-md-3">
                <div class="sidebar slidebar-shop">
                    <div class="widget widget-search">
                        <form role="search" method="get" class="search-form" action="@Url.Action("Index", "Shop")">
                            <label>
                                <input type="search" class="search-field" placeholder="Rechercher …" value="@Model.Search" name="searchTerm">
                            </label>
                            <input type="submit" class="search-submit" value="Search">
                        </form>
                    </div><!-- /.widget-search -->
                    <div class="widget widget-sort-by">
                        <h5 class="widget-title">
                            Filtrer par;
                        </h5>

                        <ul>
                            <li><a data-href="@Url.Action("FiltreProduit", "Shop", new { sortBy = (int)SortByEnums.Default, type_produitID = Model.Type_ProduitID })" class="dataLink @(Model.SortBy.HasValue ? Model.SortBy.Value == (int)SortByEnums.Default ? "active" : string.Empty : string.Empty)">Default</a></li>
                            <li><a data-href="@Url.Action("FiltreProduit", "Shop", new { sortBy = (int)SortByEnums.Populaire, type_produitID = Model.Type_ProduitID  })" class="dataLink @(Model.SortBy.HasValue ? Model.SortBy.Value == (int)SortByEnums.Populaire ? "active" : string.Empty : string.Empty)">Popularité</a></li>
                            <li><a data-href="@Url.Action("FiltreProduit", "Shop", new { sortBy = (int)SortByEnums.PrixFaibleAEleve, type_produitID = Model.Type_ProduitID  })" class="dataLink @(Model.SortBy.HasValue ? Model.SortBy.Value == (int)SortByEnums.PrixFaibleAEleve ? "active" : string.Empty : string.Empty)">Prix: faible a élevé</a></li>
                            <li><a data-href="@Url.Action("FiltreProduit", "Shop", new { sortBy = (int)SortByEnums.PrixEleveAFaible, type_produitID = Model.Type_ProduitID  })" class="dataLink @(Model.SortBy.HasValue ? Model.SortBy.Value == (int)SortByEnums.PrixEleveAFaible ? "active" : string.Empty : string.Empty)">Prix: élevé a faible</a></li>
                        </ul>
                    </div>
                    <div class="widget widget_tag">
                        <h5 class="widget-title">
                            Categories proposées
                        </h5>
                        <div class="tag-list">
                            @foreach (var type_produit in Model.DifferentesCategories)
                            {
                                <a data-href="@Url.Action("FiltreProduit", "Shop", new { type_produitID = type_produit.Type_ProduitID, sortBy = Model.SortBy })" class="dataLink @(Model.Type_ProduitID.HasValue && Model.Type_ProduitID.Value == type_produit.Type_ProduitID ? "actif" : string.Empty)">@type_produit.Type</a>
                            }
                        </div>
                    </div>
                    <div class="widget widget-price">
                        <h5 class="widget-title">Filtrer par prix</h5>
                        <div class="price-filter">
                            <div id="slide-range"></div>
                            <p class="amount">
                                Price: <input type="text" id="amount" disabled="">
                            </p>
                        </div>
                    </div><!-- /.widget -->
                    <a href="@Url.Action("Index", "Shop")" class="btn btn-danger">Reset Filtres</a>
                </div><!-- /.sidebar -->
            </div><!-- /.col-md-3 -->
            <div class="col-md-9">
                <div id="productsDiv">
                    @{
                        var filtreProduitViewModel = new FiltreProduitsViewModel();
                        filtreProduitViewModel.Produits = Model.Produits;
                        filtreProduitViewModel.Type_ProduitID = Model.Type_ProduitID;
                        filtreProduitViewModel.SortBy = Model.SortBy;

                        Html.RenderPartial("FiltreProduit", filtreProduitViewModel);
                    }
                </div>

            </div><!-- /.col-md-9 -->
        </div><!-- /.row -->
    </div><!-- /.container -->
</section><!-- /.flat-row -->
            

<script>
    var callTimeout;

    $(".dataLink").click(function () {
        var url = $(this).attr("data-href");
        if (url != "" || url != undefined) {
            GetData(url);
        }
    });
    function GetData(dUrl) {
        console.log("getdata in");
        showLoader();
        $.ajax({
            url: dUrl,
            data: {
                minimumPrice: priceSlider.slider("values", 0),
                maximumPrice: priceSlider.slider("values", 1)
            }
        })
            .done(function (response) {
                console.log("done");
                $("#productsDiv").html(response);
            })
            .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                console.log("fail");
                alert("FAIL");
            })
            .always(function () {
                console.log("always");
                hideLoader();
            });
        console.log("getdata out");
    }
    	function PriceRangeChange(){
		$.ajax({
			url: '@Url.Action("FiltreProduit", "Shop")',
			data: {
				searchTerm: $("#SearchTerm").val(),
				sortBy: $("#SortBy").val(),
				categoryID: $("#CategoryID").val(),

			}
		})
        .done(function (response) {
        	$("#productsDiv").html(response);
        })
        .fail(function (XMLHttpRequest, textStatus, errorThrown) {
        	alert("ECHEC");
        });
	}

</script>